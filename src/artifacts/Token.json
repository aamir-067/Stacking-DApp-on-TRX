{
  "contractName": "Token",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50d380156200001f57600080fd5b50d280156200002d57600080fd5b506040518060400160405280600581526020017f546f6b656e0000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f544b4e000000000000000000000000000000000000000000000000000000000081525060048260039080519060200190620000b49291906200034a565b508160049080519060200190620000cd9291906200034a565b5080600560006101000a81548160ff021916908360ff1602179055505050506200012f33620001016200013560201b60201c565b60ff16600a62000112919062000587565b6305f5e100620001239190620005d8565b6200014c60201b60201c565b6200081e565b6000600560009054906101000a900460ff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620001bf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001b6906200069a565b60405180910390fd5b620001db81600254620002e760201b620006cd1790919060201c565b60028190555062000239816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620002e760201b620006cd1790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002db9190620006cd565b60405180910390a35050565b6000808284620002f89190620006ea565b90508381101562000340576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003379062000797565b60405180910390fd5b8091505092915050565b8280546200035890620007e8565b90600052602060002090601f0160209004810192826200037c5760008555620003c8565b82601f106200039757805160ff1916838001178555620003c8565b82800160010185558215620003c8579182015b82811115620003c7578251825591602001919060010190620003aa565b5b509050620003d79190620003db565b5090565b5b80821115620003f6576000816000905550600101620003dc565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115620004885780860481111562000460576200045f620003fa565b5b6001851615620004705780820291505b8081029050620004808562000429565b945062000440565b94509492505050565b600082620004a3576001905062000576565b81620004b3576000905062000576565b8160018114620004cc5760028114620004d7576200050d565b600191505062000576565b60ff841115620004ec57620004eb620003fa565b5b8360020a915084821115620005065762000505620003fa565b5b5062000576565b5060208310610133831016604e8410600b8410161715620005475782820a905083811115620005415762000540620003fa565b5b62000576565b62000556848484600162000436565b9250905081840481111562000570576200056f620003fa565b5b81810290505b9392505050565b6000819050919050565b600062000594826200057d565b9150620005a1836200057d565b9250620005d07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000491565b905092915050565b6000620005e5826200057d565b9150620005f2836200057d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200062e576200062d620003fa565b5b828202905092915050565b600082825260208201905092915050565b7f54524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000682601f8362000639565b91506200068f826200064a565b602082019050919050565b60006020820190508181036000830152620006b58162000673565b9050919050565b620006c7816200057d565b82525050565b6000602082019050620006e46000830184620006bc565b92915050565b6000620006f7826200057d565b915062000704836200057d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200073c576200073b620003fa565b5b828201905092915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b60006200077f601b8362000639565b91506200078c8262000747565b602082019050919050565b60006020820190508181036000830152620007b28162000770565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200080157607f821691505b60208210811415620008185762000817620007b9565b5b50919050565b61134c806200082e6000396000f3fe608060405234801561001057600080fd5b50d3801561001d57600080fd5b50d2801561002a57600080fd5b50600436106100c35760003560e01c8063395093511161008b578063395093511461018257806370a08231146101b257806395d89b41146101e2578063a457c2d714610200578063a9059cbb14610230578063dd62ed3e14610260576100c3565b806306fdde03146100c8578063095ea7b3146100e657806318160ddd1461011657806323b872dd14610134578063313ce56714610164575b600080fd5b6100d0610290565b6040516100dd9190610c5e565b60405180910390f35b61010060048036038101906100fb9190610d45565b610322565b60405161010d9190610da0565b60405180910390f35b61011e610339565b60405161012b9190610dca565b60405180910390f35b61014e60048036038101906101499190610de5565b610343565b60405161015b9190610da0565b60405180910390f35b61016c6103f4565b6040516101799190610e54565b60405180910390f35b61019c60048036038101906101979190610d45565b61040b565b6040516101a99190610da0565b60405180910390f35b6101cc60048036038101906101c79190610e6f565b6104b0565b6040516101d99190610dca565b60405180910390f35b6101ea6104f8565b6040516101f79190610c5e565b60405180910390f35b61021a60048036038101906102159190610d45565b61058a565b6040516102279190610da0565b60405180910390f35b61024a60048036038101906102459190610d45565b61062f565b6040516102579190610da0565b60405180910390f35b61027a60048036038101906102759190610e9c565b610646565b6040516102879190610dca565b60405180910390f35b60606003805461029f90610f0b565b80601f01602080910402602001604051908101604052809291908181526020018280546102cb90610f0b565b80156103185780601f106102ed57610100808354040283529160200191610318565b820191906000526020600020905b8154815290600101906020018083116102fb57829003601f168201915b5050505050905090565b600061032f33848461072b565b6001905092915050565b6000600254905090565b60006103508484846108f6565b6103e984336103e485600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b6690919063ffffffff16565b61072b565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006104a633846104a185600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106cd90919063ffffffff16565b61072b565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461050790610f0b565b80601f016020809104026020016040519081016040528092919081815260200182805461053390610f0b565b80156105805780601f1061055557610100808354040283529160200191610580565b820191906000526020600020905b81548152906001019060200180831161056357829003601f168201915b5050505050905090565b6000610625338461062085600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b6690919063ffffffff16565b61072b565b6001905092915050565b600061063c3384846108f6565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008082846106dc9190610f6c565b905083811015610721576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107189061100e565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561079b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610792906110a0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561080b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080290611132565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108e99190610dca565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610966576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095d906111c4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cd90611256565b60405180910390fd5b610a27816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b6690919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610aba816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106cd90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b599190610dca565b60405180910390a3505050565b600082821115610bab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba2906112c2565b60405180910390fd5b60008284610bb991906112e2565b90508091505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bff578082015181840152602081019050610be4565b83811115610c0e576000848401525b50505050565b6000601f19601f8301169050919050565b6000610c3082610bc5565b610c3a8185610bd0565b9350610c4a818560208601610be1565b610c5381610c14565b840191505092915050565b60006020820190508181036000830152610c788184610c25565b905092915050565b600080fd5b600074ffffffffffffffffffffffffffffffffffffffffff82169050919050565b610caf81610c85565b8114610cba57600080fd5b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ce882610cbd565b9050919050565b600081359050610cfe81610ca6565b610d0781610cdd565b905092915050565b6000819050919050565b610d2281610d0f565b8114610d2d57600080fd5b50565b600081359050610d3f81610d19565b92915050565b60008060408385031215610d5c57610d5b610c80565b5b6000610d6a85828601610cef565b9250506020610d7b85828601610d30565b9150509250929050565b60008115159050919050565b610d9a81610d85565b82525050565b6000602082019050610db56000830184610d91565b92915050565b610dc481610d0f565b82525050565b6000602082019050610ddf6000830184610dbb565b92915050565b600080600060608486031215610dfe57610dfd610c80565b5b6000610e0c86828701610cef565b9350506020610e1d86828701610cef565b9250506040610e2e86828701610d30565b9150509250925092565b600060ff82169050919050565b610e4e81610e38565b82525050565b6000602082019050610e696000830184610e45565b92915050565b600060208284031215610e8557610e84610c80565b5b6000610e9384828501610cef565b91505092915050565b60008060408385031215610eb357610eb2610c80565b5b6000610ec185828601610cef565b9250506020610ed285828601610cef565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f2357607f821691505b60208210811415610f3757610f36610edc565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f7782610d0f565b9150610f8283610d0f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fb757610fb6610f3d565b5b828201905092915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000610ff8601b83610bd0565b915061100382610fc2565b602082019050919050565b6000602082019050818103600083015261102781610feb565b9050919050565b7f54524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061108a602483610bd0565b91506110958261102e565b604082019050919050565b600060208201905081810360008301526110b98161107d565b9050919050565b7f54524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061111c602283610bd0565b9150611127826110c0565b604082019050919050565b6000602082019050818103600083015261114b8161110f565b9050919050565b7f54524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006111ae602583610bd0565b91506111b982611152565b604082019050919050565b600060208201905081810360008301526111dd816111a1565b9050919050565b7f54524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611240602383610bd0565b915061124b826111e4565b604082019050919050565b6000602082019050818103600083015261126f81611233565b9050919050565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f770000600082015250565b60006112ac601e83610bd0565b91506112b782611276565b602082019050919050565b600060208201905081810360008301526112db8161129f565b9050919050565b60006112ed82610d0f565b91506112f883610d0f565b92508282101561130b5761130a610f3d565b5b82820390509291505056fea26474726f6e58221220e98855c5369f17c0e5a6a201388844eda5534152d2bcbdf8d05995713d1ba7b864736f6c634300080b0033",
  "deployedBytecode": "",
  "sourceMap": "146:169:1:-:0;;;192:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;442:186:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;236:1:1;546:9:5;538:5;:17;;;;;;;;;;;;:::i;:::-;;575:11;565:7;:21;;;;;;;;;;;;:::i;:::-;;608:13;596:9;;:25;;;;;;;;;;;;;;;;;;442:186;;;248:58:1::1;254:10;293;:8;;;:10;;:::i;:::-;285:19;;279:2;:25;;;;:::i;:::-;266:9;:39;;;;:::i;:::-;248:5;;;:58;;:::i;:::-;146:169:::0;;1521:81:5;1562:5;1586:9;;;;;;;;;;;1579:16;;1521:81;:::o;5799:302:4:-;5893:1;5874:21;;:7;:21;;;;5866:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;5957:24;5974:6;5957:12;;:16;;;;;;:24;;;;:::i;:::-;5942:12;:39;;;;6012:30;6035:6;6012:9;:18;6022:7;6012:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;5991:9;:18;6001:7;5991:18;;;;;;;;;;;;;;;:51;;;;6078:7;6057:37;;6074:1;6057:37;;;6087:6;6057:37;;;;;;:::i;:::-;;;;;;;;5799:302;;:::o;866:176:3:-;924:7;943:9;959:1;955;:5;;;;:::i;:::-;943:17;;983:1;978;:6;;970:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1034:1;1027:8;;;866:176;;;;:::o;146:169:1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:180:6:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:102;235:8;282:5;279:1;275:13;254:34;;193:102;;;:::o;301:848::-;362:5;369:4;393:6;384:15;;417:5;408:14;;431:712;452:1;442:8;439:15;431:712;;;547:4;542:3;538:14;532:4;529:24;526:50;;;556:18;;:::i;:::-;526:50;606:1;596:8;592:16;589:451;;;1021:4;1014:5;1010:16;1001:25;;589:451;1071:4;1065;1061:15;1053:23;;1101:32;1124:8;1101:32;:::i;:::-;1089:44;;431:712;;;301:848;;;;;;;:::o;1155:1073::-;1209:5;1400:8;1390:40;;1421:1;1412:10;;1423:5;;1390:40;1449:4;1439:36;;1466:1;1457:10;;1468:5;;1439:36;1535:4;1583:1;1578:27;;;;1619:1;1614:191;;;;1528:277;;1578:27;1596:1;1587:10;;1598:5;;;1614:191;1659:3;1649:8;1646:17;1643:43;;;1666:18;;:::i;:::-;1643:43;1715:8;1712:1;1708:16;1699:25;;1750:3;1743:5;1740:14;1737:40;;;1757:18;;:::i;:::-;1737:40;1790:5;;;1528:277;;1914:2;1904:8;1901:16;1895:3;1889:4;1886:13;1882:36;1864:2;1854:8;1851:16;1846:2;1840:4;1837:12;1833:35;1817:111;1814:246;;;1970:8;1964:4;1960:19;1951:28;;2005:3;1998:5;1995:14;1992:40;;;2012:18;;:::i;:::-;1992:40;2045:5;;1814:246;2085:42;2123:3;2113:8;2107:4;2104:1;2085:42;:::i;:::-;2070:57;;;;2159:4;2154:3;2150:14;2143:5;2140:25;2137:51;;;2168:18;;:::i;:::-;2137:51;2217:4;2210:5;2206:16;2197:25;;1155:1073;;;;;;:::o;2234:77::-;2271:7;2300:5;2289:16;;2234:77;;;:::o;2317:285::-;2377:5;2401:23;2419:4;2401:23;:::i;:::-;2393:31;;2445:27;2463:8;2445:27;:::i;:::-;2433:39;;2491:104;2528:66;2518:8;2512:4;2491:104;:::i;:::-;2482:113;;2317:285;;;;:::o;2608:348::-;2648:7;2671:20;2689:1;2671:20;:::i;:::-;2666:25;;2705:20;2723:1;2705:20;:::i;:::-;2700:25;;2893:1;2825:66;2821:74;2818:1;2815:81;2810:1;2803:9;2796:17;2792:105;2789:131;;;2900:18;;:::i;:::-;2789:131;2948:1;2945;2941:9;2930:20;;2608:348;;;;:::o;2962:169::-;3046:11;3080:6;3075:3;3068:19;3120:4;3115:3;3111:14;3096:29;;2962:169;;;;:::o;3137:181::-;3277:33;3273:1;3265:6;3261:14;3254:57;3137:181;:::o;3324:366::-;3466:3;3487:67;3551:2;3546:3;3487:67;:::i;:::-;3480:74;;3563:93;3652:3;3563:93;:::i;:::-;3681:2;3676:3;3672:12;3665:19;;3324:366;;;:::o;3696:419::-;3862:4;3900:2;3889:9;3885:18;3877:26;;3949:9;3943:4;3939:20;3935:1;3924:9;3920:17;3913:47;3977:131;4103:4;3977:131;:::i;:::-;3969:139;;3696:419;;;:::o;4121:118::-;4208:24;4226:5;4208:24;:::i;:::-;4203:3;4196:37;4121:118;;:::o;4245:222::-;4338:4;4376:2;4365:9;4361:18;4353:26;;4389:71;4457:1;4446:9;4442:17;4433:6;4389:71;:::i;:::-;4245:222;;;;:::o;4473:305::-;4513:3;4532:20;4550:1;4532:20;:::i;:::-;4527:25;;4566:20;4584:1;4566:20;:::i;:::-;4561:25;;4720:1;4652:66;4648:74;4645:1;4642:81;4639:107;;;4726:18;;:::i;:::-;4639:107;4770:1;4767;4763:9;4756:16;;4473:305;;;;:::o;4784:177::-;4924:29;4920:1;4912:6;4908:14;4901:53;4784:177;:::o;4967:366::-;5109:3;5130:67;5194:2;5189:3;5130:67;:::i;:::-;5123:74;;5206:93;5295:3;5206:93;:::i;:::-;5324:2;5319:3;5315:12;5308:19;;4967:366;;;:::o;5339:419::-;5505:4;5543:2;5532:9;5528:18;5520:26;;5592:9;5586:4;5582:20;5578:1;5567:9;5563:17;5556:47;5620:131;5746:4;5620:131;:::i;:::-;5612:139;;5339:419;;;:::o;5764:180::-;5812:77;5809:1;5802:88;5909:4;5906:1;5899:15;5933:4;5930:1;5923:15;5950:320;5994:6;6031:1;6025:4;6021:12;6011:22;;6078:1;6072:4;6068:12;6099:18;6089:81;;6155:4;6147:6;6143:17;6133:27;;6089:81;6217:2;6209:6;6206:14;6186:18;6183:38;6180:84;;;6236:18;;:::i;:::-;6180:84;6001:269;5950:320;;;:::o;146:169:1:-;;;;;;;",
  "deployedSourceMap": "146:169:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;693:81:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2481:145:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1542:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3083:252;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1521:81:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3730:203:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1689:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;887:85:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4420:213:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2000:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2211:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;693:81:5;730:13;762:5;755:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;693:81;:::o;2481:145:4:-;2546:4;2562:36;2571:10;2583:7;2592:5;2562:8;:36::i;:::-;2615:4;2608:11;;2481:145;;;;:::o;1542:89::-;1586:7;1612:12;;1605:19;;1542:89;:::o;3083:252::-;3172:4;3188:36;3198:6;3206:9;3217:6;3188:9;:36::i;:::-;3234:73;3243:6;3251:10;3263:43;3299:6;3263:11;:19;3275:6;3263:19;;;;;;;;;;;;;;;:31;3283:10;3263:31;;;;;;;;;;;;;;;;:35;;:43;;;;:::i;:::-;3234:8;:73::i;:::-;3324:4;3317:11;;3083:252;;;;;:::o;1521:81:5:-;1562:5;1586:9;;;;;;;;;;;1579:16;;1521:81;:::o;3730:203:4:-;3810:4;3826:79;3835:10;3847:7;3856:48;3893:10;3856:11;:23;3868:10;3856:23;;;;;;;;;;;;;;;:32;3880:7;3856:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;3826:8;:79::i;:::-;3922:4;3915:11;;3730:203;;;;:::o;1689:108::-;1746:7;1772:9;:18;1782:7;1772:18;;;;;;;;;;;;;;;;1765:25;;1689:108;;;:::o;887:85:5:-;926:13;958:7;951:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;887:85;:::o;4420:213:4:-;4505:4;4521:84;4530:10;4542:7;4551:53;4588:15;4551:11;:23;4563:10;4551:23;;;;;;;;;;;;;;;:32;4575:7;4551:32;;;;;;;;;;;;;;;;:36;;:53;;;;:::i;:::-;4521:8;:84::i;:::-;4622:4;4615:11;;4420:213;;;;:::o;2000:153::-;2069:4;2085:40;2095:10;2107:9;2118:6;2085:9;:40::i;:::-;2142:4;2135:11;;2000:153;;;;:::o;2211:132::-;2283:7;2309:11;:18;2321:5;2309:18;;;;;;;;;;;;;;;:27;2328:7;2309:27;;;;;;;;;;;;;;;;2302:34;;2211:132;;;;:::o;866:176:3:-;924:7;943:9;959:1;955;:5;;;;:::i;:::-;943:17;;983:1;978;:6;;970:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1034:1;1027:8;;;866:176;;;;:::o;7146:329:4:-;7255:1;7238:19;;:5;:19;;;;7230:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7335:1;7316:21;;:7;:21;;;;7308:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7417:5;7387:11;:18;7399:5;7387:18;;;;;;;;;;;;;;;:27;7406:7;7387:27;;;;;;;;;;;;;;;:35;;;;7453:7;7437:31;;7446:5;7437:31;;;7462:5;7437:31;;;;;;:::i;:::-;;;;;;;;7146:329;;;:::o;5107:422::-;5222:1;5204:20;;:6;:20;;;;5196:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;5305:1;5284:23;;:9;:23;;;;5276:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;5378:29;5400:6;5378:9;:17;5388:6;5378:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;5358:9;:17;5368:6;5358:17;;;;;;;;;;;;;;;:49;;;;5440:32;5465:6;5440:9;:20;5450:9;5440:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5417:9;:20;5427:9;5417:20;;;;;;;;;;;;;;;:55;;;;5504:9;5487:35;;5496:6;5487:35;;;5515:6;5487:35;;;;;;:::i;:::-;;;;;;;;5107:422;;;:::o;1306:179:3:-;1364:7;1396:1;1391;:6;;1383:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1442:9;1458:1;1454;:5;;;;:::i;:::-;1442:17;;1477:1;1470:8;;;1306:179;;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:128;1761:7;1801:44;1794:5;1790:56;1779:67;;1724:128;;;:::o;1858:122::-;1931:24;1949:5;1931:24;:::i;:::-;1924:5;1921:35;1911:63;;1970:1;1967;1960:12;1911:63;1858:122;:::o;1986:126::-;2023:7;2063:42;2056:5;2052:54;2041:65;;1986:126;;;:::o;2118:96::-;2155:7;2184:24;2202:5;2184:24;:::i;:::-;2173:35;;2118:96;;;:::o;2220:181::-;2266:5;2304:6;2291:20;2282:29;;2320:33;2347:5;2320:33;:::i;:::-;2371:24;2389:5;2371:24;:::i;:::-;2362:33;;2220:181;;;;:::o;2407:77::-;2444:7;2473:5;2462:16;;2407:77;;;:::o;2490:122::-;2563:24;2581:5;2563:24;:::i;:::-;2556:5;2553:35;2543:63;;2602:1;2599;2592:12;2543:63;2490:122;:::o;2618:139::-;2664:5;2702:6;2689:20;2680:29;;2718:33;2745:5;2718:33;:::i;:::-;2618:139;;;;:::o;2763:474::-;2831:6;2839;2888:2;2876:9;2867:7;2863:23;2859:32;2856:119;;;2894:79;;:::i;:::-;2856:119;3014:1;3039:53;3084:7;3075:6;3064:9;3060:22;3039:53;:::i;:::-;3029:63;;2985:117;3141:2;3167:53;3212:7;3203:6;3192:9;3188:22;3167:53;:::i;:::-;3157:63;;3112:118;2763:474;;;;;:::o;3243:90::-;3277:7;3320:5;3313:13;3306:21;3295:32;;3243:90;;;:::o;3339:109::-;3420:21;3435:5;3420:21;:::i;:::-;3415:3;3408:34;3339:109;;:::o;3454:210::-;3541:4;3579:2;3568:9;3564:18;3556:26;;3592:65;3654:1;3643:9;3639:17;3630:6;3592:65;:::i;:::-;3454:210;;;;:::o;3670:118::-;3757:24;3775:5;3757:24;:::i;:::-;3752:3;3745:37;3670:118;;:::o;3794:222::-;3887:4;3925:2;3914:9;3910:18;3902:26;;3938:71;4006:1;3995:9;3991:17;3982:6;3938:71;:::i;:::-;3794:222;;;;:::o;4022:619::-;4099:6;4107;4115;4164:2;4152:9;4143:7;4139:23;4135:32;4132:119;;;4170:79;;:::i;:::-;4132:119;4290:1;4315:53;4360:7;4351:6;4340:9;4336:22;4315:53;:::i;:::-;4305:63;;4261:117;4417:2;4443:53;4488:7;4479:6;4468:9;4464:22;4443:53;:::i;:::-;4433:63;;4388:118;4545:2;4571:53;4616:7;4607:6;4596:9;4592:22;4571:53;:::i;:::-;4561:63;;4516:118;4022:619;;;;;:::o;4647:86::-;4682:7;4722:4;4715:5;4711:16;4700:27;;4647:86;;;:::o;4739:112::-;4822:22;4838:5;4822:22;:::i;:::-;4817:3;4810:35;4739:112;;:::o;4857:214::-;4946:4;4984:2;4973:9;4969:18;4961:26;;4997:67;5061:1;5050:9;5046:17;5037:6;4997:67;:::i;:::-;4857:214;;;;:::o;5077:329::-;5136:6;5185:2;5173:9;5164:7;5160:23;5156:32;5153:119;;;5191:79;;:::i;:::-;5153:119;5311:1;5336:53;5381:7;5372:6;5361:9;5357:22;5336:53;:::i;:::-;5326:63;;5282:117;5077:329;;;;:::o;5412:474::-;5480:6;5488;5537:2;5525:9;5516:7;5512:23;5508:32;5505:119;;;5543:79;;:::i;:::-;5505:119;5663:1;5688:53;5733:7;5724:6;5713:9;5709:22;5688:53;:::i;:::-;5678:63;;5634:117;5790:2;5816:53;5861:7;5852:6;5841:9;5837:22;5816:53;:::i;:::-;5806:63;;5761:118;5412:474;;;;;:::o;5892:180::-;5940:77;5937:1;5930:88;6037:4;6034:1;6027:15;6061:4;6058:1;6051:15;6078:320;6122:6;6159:1;6153:4;6149:12;6139:22;;6206:1;6200:4;6196:12;6227:18;6217:81;;6283:4;6275:6;6271:17;6261:27;;6217:81;6345:2;6337:6;6334:14;6314:18;6311:38;6308:84;;;6364:18;;:::i;:::-;6308:84;6129:269;6078:320;;;:::o;6404:180::-;6452:77;6449:1;6442:88;6549:4;6546:1;6539:15;6573:4;6570:1;6563:15;6590:305;6630:3;6649:20;6667:1;6649:20;:::i;:::-;6644:25;;6683:20;6701:1;6683:20;:::i;:::-;6678:25;;6837:1;6769:66;6765:74;6762:1;6759:81;6756:107;;;6843:18;;:::i;:::-;6756:107;6887:1;6884;6880:9;6873:16;;6590:305;;;;:::o;6901:177::-;7041:29;7037:1;7029:6;7025:14;7018:53;6901:177;:::o;7084:366::-;7226:3;7247:67;7311:2;7306:3;7247:67;:::i;:::-;7240:74;;7323:93;7412:3;7323:93;:::i;:::-;7441:2;7436:3;7432:12;7425:19;;7084:366;;;:::o;7456:419::-;7622:4;7660:2;7649:9;7645:18;7637:26;;7709:9;7703:4;7699:20;7695:1;7684:9;7680:17;7673:47;7737:131;7863:4;7737:131;:::i;:::-;7729:139;;7456:419;;;:::o;7881:223::-;8021:34;8017:1;8009:6;8005:14;7998:58;8090:6;8085:2;8077:6;8073:15;8066:31;7881:223;:::o;8110:366::-;8252:3;8273:67;8337:2;8332:3;8273:67;:::i;:::-;8266:74;;8349:93;8438:3;8349:93;:::i;:::-;8467:2;8462:3;8458:12;8451:19;;8110:366;;;:::o;8482:419::-;8648:4;8686:2;8675:9;8671:18;8663:26;;8735:9;8729:4;8725:20;8721:1;8710:9;8706:17;8699:47;8763:131;8889:4;8763:131;:::i;:::-;8755:139;;8482:419;;;:::o;8907:221::-;9047:34;9043:1;9035:6;9031:14;9024:58;9116:4;9111:2;9103:6;9099:15;9092:29;8907:221;:::o;9134:366::-;9276:3;9297:67;9361:2;9356:3;9297:67;:::i;:::-;9290:74;;9373:93;9462:3;9373:93;:::i;:::-;9491:2;9486:3;9482:12;9475:19;;9134:366;;;:::o;9506:419::-;9672:4;9710:2;9699:9;9695:18;9687:26;;9759:9;9753:4;9749:20;9745:1;9734:9;9730:17;9723:47;9787:131;9913:4;9787:131;:::i;:::-;9779:139;;9506:419;;;:::o;9931:224::-;10071:34;10067:1;10059:6;10055:14;10048:58;10140:7;10135:2;10127:6;10123:15;10116:32;9931:224;:::o;10161:366::-;10303:3;10324:67;10388:2;10383:3;10324:67;:::i;:::-;10317:74;;10400:93;10489:3;10400:93;:::i;:::-;10518:2;10513:3;10509:12;10502:19;;10161:366;;;:::o;10533:419::-;10699:4;10737:2;10726:9;10722:18;10714:26;;10786:9;10780:4;10776:20;10772:1;10761:9;10757:17;10750:47;10814:131;10940:4;10814:131;:::i;:::-;10806:139;;10533:419;;;:::o;10958:222::-;11098:34;11094:1;11086:6;11082:14;11075:58;11167:5;11162:2;11154:6;11150:15;11143:30;10958:222;:::o;11186:366::-;11328:3;11349:67;11413:2;11408:3;11349:67;:::i;:::-;11342:74;;11425:93;11514:3;11425:93;:::i;:::-;11543:2;11538:3;11534:12;11527:19;;11186:366;;;:::o;11558:419::-;11724:4;11762:2;11751:9;11747:18;11739:26;;11811:9;11805:4;11801:20;11797:1;11786:9;11782:17;11775:47;11839:131;11965:4;11839:131;:::i;:::-;11831:139;;11558:419;;;:::o;11983:180::-;12123:32;12119:1;12111:6;12107:14;12100:56;11983:180;:::o;12169:366::-;12311:3;12332:67;12396:2;12391:3;12332:67;:::i;:::-;12325:74;;12408:93;12497:3;12408:93;:::i;:::-;12526:2;12521:3;12517:12;12510:19;;12169:366;;;:::o;12541:419::-;12707:4;12745:2;12734:9;12730:18;12722:26;;12794:9;12788:4;12784:20;12780:1;12769:9;12765:17;12758:47;12822:131;12948:4;12822:131;:::i;:::-;12814:139;;12541:419;;;:::o;12966:191::-;13006:4;13026:20;13044:1;13026:20;:::i;:::-;13021:25;;13060:20;13078:1;13060:20;:::i;:::-;13055:25;;13099:1;13096;13093:8;13090:34;;;13104:18;;:::i;:::-;13090:34;13149:1;13146;13142:9;13134:17;;12966:191;;;;:::o",
  "source": "// SPDX-License-Identifier: SEE LICENSE IN LICENSE\npragma solidity ^0.8.10;\nimport \"./tamplate/TRC20.sol\";\nimport \"./tamplate/TRC20Detailed.sol\";\ncontract Token is TRC20, TRC20Detailed{\n\n\n    constructor() TRC20Detailed(\"Token\", \"TKN\", 4){\n        _mint(msg.sender, 100000000 * (10 ** uint256(decimals())));\n    }\n}",
  "sourcePath": "/Users/aamir/Documents/vs codes/blockchain development/TRC20/first/tron/contracts/Token.sol",
  "ast": {
    "absolutePath": "/Users/aamir/Documents/vs codes/blockchain development/TRC20/first/tron/contracts/Token.sol",
    "exportedSymbols": {
      "ITRC20": [
        463
      ],
      "SafeMath": [
        602
      ],
      "TRC20": [
        1021
      ],
      "TRC20Detailed": [
        1081
      ],
      "Token": [
        385
      ]
    },
    "id": 386,
    "license": "SEE LICENSE IN LICENSE",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 354,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "51:24:1"
      },
      {
        "absolutePath": "/Users/aamir/Documents/vs codes/blockchain development/TRC20/first/tron/contracts/tamplate/TRC20.sol",
        "file": "./tamplate/TRC20.sol",
        "id": 355,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 386,
        "sourceUnit": 1022,
        "src": "76:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/aamir/Documents/vs codes/blockchain development/TRC20/first/tron/contracts/tamplate/TRC20Detailed.sol",
        "file": "./tamplate/TRC20Detailed.sol",
        "id": 356,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 386,
        "sourceUnit": 1082,
        "src": "107:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 357,
              "name": "TRC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1021,
              "src": "164:5:1"
            },
            "id": 358,
            "nodeType": "InheritanceSpecifier",
            "src": "164:5:1"
          },
          {
            "baseName": {
              "id": 359,
              "name": "TRC20Detailed",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1081,
              "src": "171:13:1"
            },
            "id": 360,
            "nodeType": "InheritanceSpecifier",
            "src": "171:13:1"
          }
        ],
        "canonicalName": "Token",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 385,
        "linearizedBaseContracts": [
          385,
          1081,
          1021,
          463
        ],
        "name": "Token",
        "nameLocation": "155:5:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 383,
              "nodeType": "Block",
              "src": "238:75:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 369,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "254:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "254:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030303030303030",
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "266:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          },
                          "value": "100000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "279:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 375,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1080,
                                      "src": "293:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                        "typeString": "function () view returns (uint8)"
                                      }
                                    },
                                    "id": 376,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "293:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 374,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "285:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 373,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "285:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "285:19:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "279:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 379,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "278:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "266:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 368,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 900,
                      "src": "248:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "248:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "248:58:1"
                }
              ]
            },
            "id": 384,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "546f6b656e",
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "220:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
                      "typeString": "literal_string \"Token\""
                    },
                    "value": "Token"
                  },
                  {
                    "hexValue": "544b4e",
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "229:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9ee187a325c80a9ca820b4f297a58770bf5a85fede3756f8e7e9d14ff37d7b66",
                      "typeString": "literal_string \"TKN\""
                    },
                    "value": "TKN"
                  },
                  {
                    "hexValue": "34",
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "236:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4_by_1",
                      "typeString": "int_const 4"
                    },
                    "value": "4"
                  }
                ],
                "id": 366,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 362,
                  "name": "TRC20Detailed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1081,
                  "src": "206:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "206:32:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:2:1"
            },
            "returnParameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "238:0:1"
            },
            "scope": 385,
            "src": "192:121:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 386,
        "src": "146:169:1",
        "usedErrors": []
      }
    ],
    "src": "51:264:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/aamir/Documents/vs codes/blockchain development/TRC20/first/tron/contracts/Token.sol",
    "exportedSymbols": {
      "ITRC20": [
        463
      ],
      "SafeMath": [
        602
      ],
      "TRC20": [
        1021
      ],
      "TRC20Detailed": [
        1081
      ],
      "Token": [
        385
      ]
    },
    "id": 386,
    "license": "SEE LICENSE IN LICENSE",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 354,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "51:24:1"
      },
      {
        "absolutePath": "/Users/aamir/Documents/vs codes/blockchain development/TRC20/first/tron/contracts/tamplate/TRC20.sol",
        "file": "./tamplate/TRC20.sol",
        "id": 355,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 386,
        "sourceUnit": 1022,
        "src": "76:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/aamir/Documents/vs codes/blockchain development/TRC20/first/tron/contracts/tamplate/TRC20Detailed.sol",
        "file": "./tamplate/TRC20Detailed.sol",
        "id": 356,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 386,
        "sourceUnit": 1082,
        "src": "107:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 357,
              "name": "TRC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1021,
              "src": "164:5:1"
            },
            "id": 358,
            "nodeType": "InheritanceSpecifier",
            "src": "164:5:1"
          },
          {
            "baseName": {
              "id": 359,
              "name": "TRC20Detailed",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1081,
              "src": "171:13:1"
            },
            "id": 360,
            "nodeType": "InheritanceSpecifier",
            "src": "171:13:1"
          }
        ],
        "canonicalName": "Token",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 385,
        "linearizedBaseContracts": [
          385,
          1081,
          1021,
          463
        ],
        "name": "Token",
        "nameLocation": "155:5:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 383,
              "nodeType": "Block",
              "src": "238:75:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 369,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "254:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "254:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030303030303030",
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "266:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          },
                          "value": "100000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "279:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 375,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1080,
                                      "src": "293:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                        "typeString": "function () view returns (uint8)"
                                      }
                                    },
                                    "id": 376,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "293:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 374,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "285:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 373,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "285:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "285:19:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "279:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 379,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "278:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "266:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 368,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 900,
                      "src": "248:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "248:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "248:58:1"
                }
              ]
            },
            "id": 384,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "546f6b656e",
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "220:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
                      "typeString": "literal_string \"Token\""
                    },
                    "value": "Token"
                  },
                  {
                    "hexValue": "544b4e",
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "229:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9ee187a325c80a9ca820b4f297a58770bf5a85fede3756f8e7e9d14ff37d7b66",
                      "typeString": "literal_string \"TKN\""
                    },
                    "value": "TKN"
                  },
                  {
                    "hexValue": "34",
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "236:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4_by_1",
                      "typeString": "int_const 4"
                    },
                    "value": "4"
                  }
                ],
                "id": 366,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 362,
                  "name": "TRC20Detailed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1081,
                  "src": "206:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "206:32:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:2:1"
            },
            "returnParameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "238:0:1"
            },
            "scope": 385,
            "src": "192:121:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 386,
        "src": "146:169:1",
        "usedErrors": []
      }
    ],
    "src": "51:264:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.b01f3284.mod.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "41b13217a5121f81ee5edd8a9be345e6457995fc87",
      "transactionHash": "55375b3c918125f9632558fb3e2d87b4f0193107d95e9d2f2d72b7090c21c9f0"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2023-11-30T07:01:43.482Z"
}